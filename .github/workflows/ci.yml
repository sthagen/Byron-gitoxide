name: ci

on:
  push:
    branches: [ main ]
    tags-ignore: [ '*' ]
    paths:
      - '.github/**'
      - 'ci/**'
      - 'etc/**'
      - 'src/**'
      - 'tests/**'
      - 'cargo-*/**'
      - 'git*/**'
      - 'experiments/**'
      - '*.toml'
      - Makefile
  pull_request:
    branches: [ main ]
    paths:
      - '.github/**'
      - 'ci/**'
      - 'etc/**'
      - 'src/**'
      - 'tests/**'
      - 'cargo-*/**'
      - 'git*/**'
      - 'experiments/**'
      - '*.toml'
      - Makefile

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: Swatinem/rust-cache@v2
    - name: Setup dependencies
      run:
        sudo apt-get install tree
    - run: git config --global protocol.file.allow always # workaround for https://bugs.launchpad.net/ubuntu/+source/git/+bug/1993586
    - name: test
      env:
        CI: true
      run: make tests

  test-fast:
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Setup dependencies (macos)
        if: startsWith(matrix.os, 'macos')
        run:
          brew install tree openssl gnu-sed
      - name: "cargo check default features"
        if: startsWith(matrix.os, 'windows')
        run: cargo check --all --bins --examples
      - run: git lfs fetch && git lfs checkout
      - uses: taiki-e/install-action@v1
        with:
          tool: nextest
          version: 0.9
      - name: "Test (nextest)"
        run: cargo nextest run --all --no-fail-fast

  installation:
    strategy:
      matrix:
        build: [ win-msvc, win-gnu, win32-msvc ]
        include:
          - build: win-msvc
            os: windows-2019
            rust: stable
            target: x86_64-pc-windows-msvc
          - build: win-gnu
            os: windows-2019
            rust: nightly-x86_64-gnu
            target: x86_64-pc-windows-gnu
          - build: win32-msvc
            os: windows-2019
            rust: nightly
            target: i686-pc-windows-msvc
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}
          targets: ${{ matrix.target }}
      - uses: Swatinem/rust-cache@v2
      - name: "Install prerequisites"
        run: vcpkg install  zlib:x64-windows-static-md
      - name: "Installation from crates.io: gitoxide"
        run: cargo install --target ${{ matrix.target }} --target-dir install-artifacts --debug --force gitoxide
      - name: "Installation from crates.io: cargo-smart-release"
        run: cargo install --target ${{ matrix.target }} --target-dir install-artifacts --debug --force cargo-smart-release

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable
          components: clippy,rustfmt
      - name: Run cargo clippy
        run: cargo clippy --all --tests
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      - name: Run cargo diet
        run: |
          curl -LSfs https://raw.githubusercontent.com/the-lean-crate/cargo-diet/master/ci/install.sh | \
           sh -s -- --git the-lean-crate/cargo-diet --target x86_64-unknown-linux-musl --tag v1.2.4

          # Let's not fail CI for this, it will fail locally often enough, and a crate a little bigger
          # than allows is no problem either if it comes to that.
          make check-size || true

  cargo-deny:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v3
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}
