name: ci

on:
  push:
    branches: [ main ]
    tags-ignore: '*'
    paths:
      - '.github/**'
      - 'ci/**'
      - 'etc/**'
      - 'src/**'
      - 'tests/**'
      - 'cargo-*/**'
      - 'git*/**'
      - 'experiments/**'
      - '*.toml'
      - Makefile
  pull_request:
    branches: [ main ]
    paths:
      - '.github/**'
      - 'ci/**'
      - 'etc/**'
      - 'src/**'
      - 'tests/**'
      - 'cargo-*/**'
      - 'git*/**'
      - 'experiments/**'
      - '*.toml'
      - Makefile

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: Swatinem/rust-cache@v1
    - name: Setup dependencies
      run:
        sudo apt-get install tree
    - name: test
      env:
        CI: true
      run: make tests

  test-fast:
    strategy:
      matrix:
        os:
          - windows-2019
          - macos-latest
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v1
      - run: rustup set auto-self-update disable
        if: contains(runner.os, 'windows')
        shell: bash
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Setup dependencies (macos)
        if: startsWith(matrix.os, 'macos')
        run:
          brew install tree openssl gnu-sed
      - name: "cargo check default features"
        if: startsWith(matrix.os, 'windows')
        uses: actions-rs/cargo@v1
        with:
          command: check
          args: --all --bins --examples
      - run: git lfs fetch && git lfs checkout
      - uses: taiki-e/install-action@v1
        with:
          tool: nextest
          version: 0.9
      - name: "Test (nextest)"
        run: cargo nextest run --all --no-fail-fast
      - name: "Install prerequisites"
        run: vcpkg install  zlib:x64-windows-static-md
        if: startsWith(matrix.os, 'windows')
      - name: "Installation from crates.io"
        if: startsWith(matrix.os, 'windows')
        uses: actions-rs/cargo@v1
        with:
          command: install
          args: "--force gitoxide cargo-smart-release"

  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1
      - uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: stable
          override: true
      - name: Run cargo clippy
        run: cargo clippy --all --tests
      - name: Run cargo fmt
        run: cargo fmt --all -- --check
      - name: Run cargo diet
        run: |
          curl -LSfs https://raw.githubusercontent.com/the-lean-crate/cargo-diet/master/ci/install.sh | \
           sh -s -- --git the-lean-crate/cargo-diet --target x86_64-unknown-linux-musl --tag v1.2.4

          # Let's not fail CI for this, it will fail locally often enough, and a crate a little bigger
          # than allows is no problem either if it comes to that.
          make check-size || true

  cargo-deny:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        checks:
          - advisories
          - bans licenses sources

    # Prevent sudden announcement of a new advisory from failing ci:
    continue-on-error: ${{ matrix.checks == 'advisories' }}

    steps:
    - uses: actions/checkout@v2
    - uses: EmbarkStudios/cargo-deny-action@v1
      with:
        command: check ${{ matrix.checks }}
